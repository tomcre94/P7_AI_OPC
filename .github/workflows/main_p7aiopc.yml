name: Build and deploy Python app to Azure Web App - P7AIOPC

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.set-artifact-name.outputs.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv antenv
          source antenv/bin/activate

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download NLTK data
        run: |
          python -c "
          import nltk
          import os
          nltk_data_dir = './nltk_data'
          os.makedirs(nltk_data_dir, exist_ok=True)
          nltk.data.path.append(nltk_data_dir)
          nltk.download('punkt', download_dir=nltk_data_dir)
          nltk.download('stopwords', download_dir=nltk_data_dir)
          nltk.download('wordnet', download_dir=nltk_data_dir)
          nltk.download('omw-1.4', download_dir=nltk_data_dir)
          "

      - name: Run unit tests
        run: |
          python -m unittest test_app.py

      - name: List directory contents before zip
        run: |
          du -h -d 1
          echo "Total size of directory:"
          du -sh .

      - name: Set artifact name
        id: set-artifact-name
        run: echo "name=python-app-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create deployment package
        run: |
          zip -r release.zip . \
            -x "antenv/*" \
            -x ".git/*" \
            -x ".github/*" \
            -x "__pycache__/*" \
            -x "*.pyc"

      - name: Check zip file size
        run: |
          du -sh release.zip
          echo "Package contents:"
          unzip -l release.zip | head -n 20

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.name }}
          path: release.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }}

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          rm release.zip

      - name: Clean deployment directory
        run: |
          rm -rf __pycache__ *.pyc .git .github tests

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'P7AIOPC'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
